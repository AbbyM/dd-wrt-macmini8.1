#!/bin/sh
nv=/usr/sbin/nvram		
/bin/mkdir -p /tmp/oet/pid
cd /tmp/oet/pid
rmmod eoip
for i in `seq 1 10`
do
	if test -e "${i}.pid" 
	then 
	    emf del iface $(getbridge oet${i}) oet${i} 2>&1 > /dev/null
	    brctl delif $(getbridge oet${i}) oet${i} 2>&1 > /dev/null
	    ip tunnel del oet${i}
	    ip link del oet${i}
	    wg set oet${i} peer $($nv get oet${i}_peerkey) remove
	    rm -f ${i}.pid
	fi
	if [ `$nv get oet${i}_en` -eq 1 ]
	then
		if [ `$nv get oet${i}_proto` -eq 2 ]
		then
			mkdir -p /tmp/wireguard
			insmod ipv6
			insmod udp_tunnel
			insmod ip6_udp_tunnel
			insmod wireguard
			ip link add oet${i} type wireguard
			wg set oet${i} listen-port $($nv get oet${i}_port)
			$nv get oet${i}_private > /tmp/wireguard/oet${i}_private
			wg set oet${i} private-key /tmp/wireguard/oet${i}_private
			peers=$((`$nv get oet${i}_peers` - 1))
			for p in `seq 0 $peers`
			do
				if [ `$nv get oet${i}_usepsk${p}` -eq 1 ]
				then
					$nv get oet${i}_psk${p} > /tmp/wireguard/oet${i}_psk${p}
					PSKARG1="preshared-key" 
					PSKARG2="/tmp/wireguard/oet${i}_psk${p}"
				fi
				wg set oet${i} peer $($nv get oet${i}_peerkey${p}) persistent-keepalive $($nv get oet${i}_ka${p}) $PSKARG1 $PSKARG2 allowed-ips 0.0.0.0/0 endpoint $($nv get oet${i}_rem${p}):$($nv get oet${i}_peerport${p})
			done
			ifconfig oet${i} promisc up 2>&1 > /dev/null
			ip addr add $($nv get oet${i}_ipaddr)/$(getmask $($nv get oet${i}_netmask)) dev oet${i} 2>&1 > /dev/null
			echo enable > ${i}.pid
		fi
		if [ `$nv get oet${i}_proto` -eq 1 ]
		then
			insmod gre
			insmod eoip
			eoip add tunnel-id $($nv get oet${i}_id) name oet${i} remote $($nv get oet${i}_rem) local $($nv get oet${i}_local)
			if [ `$nv get oet${i}_bridged` -eq 1 ]
			then
				ifconfig oet${i} up 2>&1 > /dev/null
				ifconfig oet${i} promisc 2>&1 > /dev/null
				brctl addif $(getbridge oet${i}) oet${i} 2>&1 > /dev/null
				brctl setportprio $(getbridge oet${i}) oet${i} $(getbridgeprio oet${i})
				emf add iface $(getbridge oet${i}) oet${i} 2>&1 > /dev/null
			else
				ifconfig oet${i} promisc up 2>&1 > /dev/null
				ip addr add $($nv get oet${i}_ipaddr)/$(getmask $($nv get oet${i}_netmask)) dev oet${i} 2>&1 > /dev/null
			fi
			echo enable > ${i}.pid
		fi
		if [ `$nv get oet${i}_proto` -eq 0 ]
		then
			insmod etherip
			if [ `$nv get oet${i}_local` == "0.0.0.0" ]
			then
				ip tunnel add oet${i} mode etherip remote $($nv get oet${i}_rem) local any
			else
				ip tunnel add oet${i} mode etherip remote $($nv get oet${i}_rem) local $($nv get oet${i}_local)			
			fi
			if [ `$nv get oet${i}_bridged` -eq 1 ]
			then
				ip link set dev oet${i} up
				ifconfig oet${i} up 2>&1 > /dev/null
				ifconfig oet${i} promisc 2>&1 > /dev/null
				brctl addif $(getbridge oet${i}) oet${i} 2>&1 > /dev/null
				brctl setportprio $(getbridge oet${i}) oet${i} $(getbridgeprio oet${i})
				emf add iface $(getbridge oet${i}) oet${i} 2>&1 > /dev/null
			else
				ip link set dev oet${i} up
				ifconfig oet${i} promisc 2>&1 > /dev/null
				ip addr add $($nv get oet${i}_ipaddr)/$(getmask $($nv get oet${i}_netmask)) dev oet${i} 2>&1 > /dev/null
    			fi
			echo enable > ${i}.pid
		fi
	fi
done
